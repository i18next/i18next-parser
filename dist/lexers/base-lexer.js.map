{"version":3,"sources":["../../src/lexers/base-lexer.js"],"names":["BaseLexer","options","keys","functions","string","regex","RegExp","stringPattern","test","join","replace","singleQuotePattern","doubleQuotePattern","variablePattern","EventEmitter"],"mappings":"gqBAAA,wD;;AAEqBA,S;AACnB,uBAA0B,eAAdC,OAAc,uEAAJ,EAAI;AACxB;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,SAAL,GAAiBF,OAAO,CAACE,SAAR,IAAqB,CAAC,GAAD,CAAtC,CAHwB;AAIzB,G;;AAED,4BAAeC,MAAf,EAAuB;AACrB,UAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAW,MAAMN,SAAS,CAACO,aAAhB,GAAgC,GAA3C,EAAgD,GAAhD,CAAd;AACA,aAAOF,KAAK,CAACG,IAAN,CAAWJ,MAAX,CAAP;AACD,K;;AAED,+BAAkB;AAChB,aAAO,QAAQ,KAAKD,SAAL,CAAeM,IAAf,CAAoB,GAApB,EAAyBC,OAAzB,CAAiC,GAAjC,EAAsC,KAAtC,CAAR,GAAuD,GAA9D;AACD,K;;AAED,mBAAgC;AAC9B,aAAO,uBAAP;AACD,K;;AAED,mBAAgC;AAC9B,aAAO,uBAAP;AACD,K;;AAED,mBAA8B;AAC5B,aAAO,uBAAP;AACD,K;;AAED,mBAA6B;AAC3B,aAAO,kBAAP;AACD,K;;AAED,mBAA2B;AACzB;AACE;AACA,SAACV,SAAS,CAACW,kBAAX,EAA+BX,SAAS,CAACY,kBAAzC,EAA6DH,IAA7D,CAAkE,GAAlE,CADA;AAEA,WAHF;;AAKD,K;;AAED,mBAAqC;AACnC;AACE;AACA;AACET,QAAAA,SAAS,CAACW,kBADZ;AAEEX,QAAAA,SAAS,CAACY,kBAFZ;AAGEZ,QAAAA,SAAS,CAACa,eAHZ;AAIEJ,QAAAA,IAJF,CAIO,GAJP,CADA;AAMA,WAPF;;AASD,K,wBAlDoCK,kB","sourcesContent":["import EventEmitter from 'events'\n\nexport default class BaseLexer extends EventEmitter {\n  constructor(options = {}) {\n    super()\n    this.keys = []\n    this.functions = options.functions || ['t']\n  }\n\n  validateString(string) {\n    const regex = new RegExp('^' + BaseLexer.stringPattern + '$', 'i')\n    return regex.test(string)\n  }\n\n  functionPattern() {\n    return '(?:' + this.functions.join('|').replace('.', '\\\\.') + ')'\n  }\n\n  static get singleQuotePattern() {\n    return \"'(?:[^'].*?[^\\\\\\\\])?'\"\n  }\n\n  static get doubleQuotePattern() {\n    return '\"(?:[^\"].*?[^\\\\\\\\])?\"'\n  }\n\n  static get backQuotePattern() {\n    return '`(?:[^`].*?[^\\\\\\\\])?`'\n  }\n\n  static get variablePattern() {\n    return '(?:[A-Z0-9_.-]+)'\n  }\n\n  static get stringPattern() {\n    return (\n      '(?:' +\n      [BaseLexer.singleQuotePattern, BaseLexer.doubleQuotePattern].join('|') +\n      ')'\n    )\n  }\n\n  static get stringOrVariablePattern() {\n    return (\n      '(?:' +\n      [\n        BaseLexer.singleQuotePattern,\n        BaseLexer.doubleQuotePattern,\n        BaseLexer.variablePattern,\n      ].join('|') +\n      ')'\n    )\n  }\n}\n"],"file":"base-lexer.js"}