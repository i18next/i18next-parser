{"version":3,"sources":["../src/transform.js"],"names":["getPluralSuffix","numberOfPluralForms","nthForm","length","i18nTransform","options","objectMode","defaults","contextSeparator","createOldCatalogs","defaultNamespace","defaultValue","indentation","keepRemoved","keySeparator","lexers","lineEnding","locales","namespaceSeparator","pluralSeparator","output","sort","useKeysAsDefaultValue","verbose","skipDefaultValues","customValueTemplate","failOnWarnings","entries","parserHadWarnings","parser","Parser","on","error","warning","warn","localeRegex","namespaceRegex","i18next","init","emit","console","file","encoding","done","content","isBuffer","contents","toString","fs","lstatSync","path","isDirectory","readFileSync","log","filename","basename","parse","entry","key","parts","split","namespace","shift","join","replace","keyWithNamespace","addEntry","a","b","localeCompare","locale","catalog","pluralRule","services","pluralResolver","getRule","numbers","countWithPlurals","uniqueCount","transformEntry","suffix","separator","value","duplicate","conflict","count","undefined","forEach","_","i","outputPath","resolve","namespacePath","parsedNamespacePath","namespaceOldPath","dir","name","ext","existingCatalog","getCatalog","existingOldCatalog","newCatalog","oldKeys","old","mergeCount","oldCount","oldCatalog","restoreCount","addCount","pushFile","Object","keys","process","exit","context","contextEntry","assign","push","endsWith","yaml","load","JSON","code","text","dump","indent","stringify","eol","auto","crlf","cr","lf","VirtualFile","Buffer","from","Transform"],"mappings":"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","sourcesContent":["import { dotPathToHash, mergeHashes, transferValues } from './helpers'\nimport { Transform } from 'stream'\nimport eol from 'eol'\nimport fs from 'fs'\nimport Parser from './parser'\nimport path from 'path'\nimport VirtualFile from 'vinyl'\nimport yaml from 'js-yaml'\nimport i18next from 'i18next'\n\nfunction getPluralSuffix(numberOfPluralForms, nthForm) {\n  if (numberOfPluralForms.length > 2) {\n    return nthForm // key_0, key_1, etc.\n  } else if (nthForm === 1) {\n    return 'plural'\n  }\n  return ''\n}\n\nexport default class i18nTransform extends Transform {\n  constructor(options = {}) {\n    options.objectMode = true\n    super(options)\n\n    this.defaults = {\n      contextSeparator: '_',\n      createOldCatalogs: true,\n      defaultNamespace: 'translation',\n      defaultValue: '',\n      indentation: 2,\n      keepRemoved: false,\n      keySeparator: '.',\n      lexers: {},\n      lineEnding: 'auto',\n      locales: ['en', 'fr'],\n      namespaceSeparator: ':',\n      pluralSeparator: '_',\n      output: 'locales/$LOCALE/$NAMESPACE.json',\n      sort: false,\n      useKeysAsDefaultValue: false,\n      verbose: false,\n      skipDefaultValues: false,\n      customValueTemplate: null,\n      failOnWarnings: false,\n    }\n\n    this.options = { ...this.defaults, ...options }\n    if (this.options.keySeparator === false) {\n      this.options.keySeparator = '__!NO_KEY_SEPARATOR!__'\n    }\n    if (this.options.namespaceSeparator === false) {\n      this.options.namespaceSeparator = '__!NO_NAMESPACE_SEPARATOR!__'\n    }\n    this.entries = []\n\n    this.parserHadWarnings = false\n    this.parser = new Parser(this.options)\n    this.parser.on('error', (error) => this.error(error))\n    this.parser.on('warning', (warning) => this.warn(warning))\n\n    this.localeRegex = /\\$LOCALE/g\n    this.namespaceRegex = /\\$NAMESPACE/g\n\n    i18next.init()\n  }\n\n  error(error) {\n    this.emit('error', error)\n    if (this.options.verbose) {\n      console.error('\\x1b[31m%s\\x1b[0m', error)\n    }\n  }\n\n  warn(warning) {\n    this.emit('warning', warning)\n    this.parserHadWarnings = true\n    if (this.options.verbose) {\n      console.warn('\\x1b[33m%s\\x1b[0m', warning)\n    }\n  }\n\n  _transform(file, encoding, done) {\n    let content\n    if (file.isBuffer()) {\n      content = file.contents.toString('utf8')\n    } else if (fs.lstatSync(file.path).isDirectory()) {\n      const warning = `${file.path} is a directory: skipping`\n      this.warn(warning)\n      done()\n      return\n    } else {\n      content = fs.readFileSync(file.path, encoding)\n    }\n\n    this.emit('reading', file)\n    if (this.options.verbose) {\n      console.log(`Parsing ${file.path}`)\n    }\n\n    const filename = path.basename(file.path)\n    const entries = this.parser.parse(content, filename)\n\n    for (const entry of entries) {\n      let key = entry.key\n      const parts = key.split(this.options.namespaceSeparator)\n\n      // make sure we're not pulling a 'namespace' out of a default value\n      if (parts.length > 1 && key !== entry.defaultValue) {\n        entry.namespace = parts.shift()\n      }\n      entry.namespace = entry.namespace || this.options.defaultNamespace\n\n      key = parts.join(this.options.namespaceSeparator)\n      key = key.replace(/\\\\('|\"|`)/g, '$1')\n      key = key.replace(/\\\\n/g, '\\n')\n      key = key.replace(/\\\\r/g, '\\r')\n      key = key.replace(/\\\\t/g, '\\t')\n      key = key.replace(/\\\\\\\\/g, '\\\\')\n      entry.key = key\n      entry.keyWithNamespace = entry.namespace + this.options.keySeparator + key\n\n      this.addEntry(entry)\n    }\n\n    done()\n  }\n\n  _flush(done) {\n    if (this.options.sort) {\n      this.entries = this.entries.sort((a, b) => a.key.localeCompare(b.key))\n    }\n\n    for (const locale of this.options.locales) {\n      const catalog = {}\n      const pluralRule = i18next.services.pluralResolver.getRule(locale)\n      const numbers = (pluralRule && pluralRule.numbers) || [1, 2]\n\n      let countWithPlurals = 0\n      let uniqueCount = this.entries.length\n\n      const transformEntry = (entry, suffix) => {\n        const { duplicate, conflict } = dotPathToHash(entry, catalog, {\n          suffix,\n          locale,\n          separator: this.options.keySeparator,\n          pluralSeparator: this.options.pluralSeparator,\n          value: this.options.defaultValue,\n          useKeysAsDefaultValue: this.options.useKeysAsDefaultValue,\n          skipDefaultValues: this.options.skipDefaultValues,\n          customValueTemplate: this.options.customValueTemplate,\n        })\n\n        if (duplicate) {\n          uniqueCount -= 1\n          if (conflict === 'key') {\n            const warning = `Found translation key already mapped to a map or parent of new key already mapped to a string: ${entry.key}`\n            this.warn(warning)\n          } else if (conflict === 'value') {\n            const warning = `Found same keys with different values: ${entry.key}`\n            this.warn(warning)\n          }\n        } else {\n          countWithPlurals += 1\n        }\n      }\n\n      // generates plurals according to i18next rules: key, key_plural, key_0, key_1, etc.\n      for (const entry of this.entries) {\n        if (entry.count !== undefined) {\n          numbers.forEach((_, i) => {\n            transformEntry(entry, getPluralSuffix(numbers, i))\n          })\n        } else {\n          transformEntry(entry)\n        }\n      }\n\n      const outputPath = path.resolve(this.options.output)\n\n      for (const namespace in catalog) {\n        let namespacePath = outputPath\n        namespacePath = namespacePath.replace(this.localeRegex, locale)\n        namespacePath = namespacePath.replace(this.namespaceRegex, namespace)\n\n        let parsedNamespacePath = path.parse(namespacePath)\n\n        const namespaceOldPath = path.join(\n          parsedNamespacePath.dir,\n          `${parsedNamespacePath.name}_old${parsedNamespacePath.ext}`\n        )\n\n        let existingCatalog = this.getCatalog(namespacePath)\n        let existingOldCatalog = this.getCatalog(namespaceOldPath)\n\n        // merges existing translations with the new ones\n        const {\n          new: newCatalog,\n          old: oldKeys,\n          mergeCount,\n          oldCount,\n        } = mergeHashes(\n          existingCatalog,\n          catalog[namespace],\n          this.options.keepRemoved\n        )\n\n        // restore old translations\n        const { old: oldCatalog, mergeCount: restoreCount } = mergeHashes(\n          existingOldCatalog,\n          newCatalog\n        )\n\n        // backup unused translations\n        transferValues(oldKeys, oldCatalog)\n\n        if (this.options.verbose) {\n          console.log(`[${locale}] ${namespace}\\n`)\n          console.log(\n            `Unique keys: ${uniqueCount} (${countWithPlurals} with plurals)`\n          )\n          const addCount = countWithPlurals - mergeCount\n          console.log(`Added keys: ${addCount}`)\n          console.log(`Restored keys: ${restoreCount}`)\n          if (this.options.keepRemoved) {\n            console.log(`Unreferenced keys: ${oldCount}`)\n          } else {\n            console.log(`Removed keys: ${oldCount}`)\n          }\n          console.log()\n        }\n\n        if (this.options.failOnWarnings && this.parserHadWarnings) {\n          continue\n        }\n\n        // push files back to the stream\n        this.pushFile(namespacePath, newCatalog)\n        if (\n          this.options.createOldCatalogs &&\n          (Object.keys(oldCatalog).length || existingOldCatalog)\n        ) {\n          this.pushFile(namespaceOldPath, oldCatalog)\n        }\n      }\n    }\n\n    if (this.options.failOnWarnings && this.parserHadWarnings) {\n      this.emit(\n        'error',\n        'Warnings were triggered and failOnWarnings option is enabled. Exiting...'\n      )\n      process.exit(1)\n    }\n\n    done()\n  }\n\n  addEntry(entry) {\n    if (entry.context) {\n      const contextEntry = Object.assign({}, entry)\n      delete contextEntry.context\n      contextEntry.key += this.options.contextSeparator + entry.context\n      contextEntry.keyWithNamespace +=\n        this.options.contextSeparator + entry.context\n      this.entries.push(contextEntry)\n    } else {\n      this.entries.push(entry)\n    }\n  }\n\n  getCatalog(path) {\n    try {\n      let content\n      if (path.endsWith('yml')) {\n        content = yaml.load(fs.readFileSync(path).toString())\n      } else {\n        content = JSON.parse(fs.readFileSync(path))\n      }\n      return content\n    } catch (error) {\n      if (error.code !== 'ENOENT') {\n        this.emit('error', error)\n      }\n    }\n\n    return null\n  }\n\n  pushFile(path, contents) {\n    let text\n    if (path.endsWith('yml')) {\n      text = yaml.dump(contents, {\n        indent: this.options.indentation,\n      })\n    } else {\n      text = JSON.stringify(contents, null, this.options.indentation) + '\\n'\n    }\n\n    if (this.options.lineEnding === 'auto') {\n      text = eol.auto(text)\n    } else if (\n      this.options.lineEnding === '\\r\\n' ||\n      this.options.lineEnding === 'crlf'\n    ) {\n      text = eol.crlf(text)\n    } else if (\n      this.options.lineEnding === '\\r' ||\n      this.options.lineEnding === 'cr'\n    ) {\n      text = eol.cr(text)\n    } else {\n      // Defaults to LF, aka \\n\n      text = eol.lf(text)\n    }\n\n    const file = new VirtualFile({\n      path,\n      contents: Buffer.from(text),\n    })\n    this.push(file)\n  }\n}\n"],"file":"transform.js"}